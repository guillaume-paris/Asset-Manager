name: .NET Core Build with Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      config: 'Release'
    strategy:
      matrix:
        dotnet-version: '6.0.x'

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      
        # restore dependencies 
      - name: Install dependencies
        working-directory: ./AssetManagerBackend
        run: dotnet restore

        # build project
      - name: Build
        working-directory: ./AssetManagerBackend
        run: dotnet build --configuration $config --no-restore
      
        # set report file and title 
      - name: Set Test Title
        working-directory: ./AssetManagerBackend
        run: | 
              if ${{ github.event_name == 'pull_request' }}
              then
                echo "title=Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
                echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV              
              else
                echo "title=Test Run ${{github.run_number}}" >> $GITHUB_ENV
                echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
              fi
        
        # run tests with built project
      - name: Test PR      
        working-directory: ./AssetManagerBackend
        run: dotnet test --no-restore --no-build --configuration $config --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"
        
        # upload report as build artifact
      - name: Upload a Build Artifact
        working-directory: ./AssetManagerBackend
        uses: actions/upload-artifact@v2
        if: ${{always()}}
        with:
          name: 'Test Run'
          path: ${{github.workspace}}/${{env.file_name}}
        
        # add report as PR comment (if PR)
      - name: comment PR
        working-directory: ./AssetManagerBackend
        uses: machine-learning-apps/pr-comment@master
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ${{env.file_name}}
